class MyThread extends Thread
{
	public void run()
	{
		for(int i=1;i<=10;i++)
		{
			System.out.println(i);
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
		}
	}
}
public class Sample {

	public static void main(String[] args) {
		MyThread t1=new MyThread();
		t1.start();
		
		MyThread t2=new MyThread();
		t2.start();
	}

}
--------------------------------------------------------------------------
class MyRunnable implements Runnable 
{
	@Override
	public void run() {		
		for(int i=1;i<=10;i++)
		{
			System.out.println(i);
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
		}
	}
	
}
public class RunnableDemo {

	public static void main(String[] args) {
		MyRunnable mr=new MyRunnable();ā
		Thread t1=new Thread(mr);
		t1.start();
		
		Thread t2=new Thread(mr);
		t2.start();

	}

}

-------------------------------------------------------------------------
class MyThread extends Thread
{
	public void run()
	{
		for(int i=1;i<=10;i++)
		{
			System.out.println(Thread.currentThread().getName()+":" +i);
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
		}
	}
}
public class Sample2 {

	public static void main(String[] args) {
		MyThread t1=new MyThread();
		t1.setName("First");
		t1.start();
		
		MyThread t2=new MyThread();
		t2.setName("Second");
		t2.start();
	}

}
--------------------------------------------------------
class MyThread extends Thread
{
	public void run()
	{
		for(int i=1;i<=10;i++)
		{
			System.out.println(Thread.currentThread().getName());
			System.out.println(Thread.currentThread().getPriority());
			System.out.println(i);
			System.out.println("-------------------------");
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
		}
	}
}
public class Sample {

	public static void main(String[] args) {
		MyThread t1=new MyThread();
		t1.setName("First");
		
		
		MyThread t2=new MyThread();
		t2.setName("Second");
		
		t1.setPriority(Thread.MIN_PRIORITY);
		t2.setPriority(Thread.MAX_PRIORITY);
		
		t1.start();
		t2.start();
		
	}

}
-----------------------------------------------------
class MyThread extends Thread
{
	public void run()
	{
		for(int i=1;i<=10;i++)
		{
			System.out.println(Thread.currentThread().getName());
			System.out.println(Thread.currentThread().getPriority());
			System.out.println(Thread.currentThread().isDaemon());
			System.out.println(i);
			System.out.println("-------------------------");
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
		}
	}
}
public class Sample {

	public static void main(String[] args) {
		MyThread t1=new MyThread();
		t1.setName("First");
		
		
		MyThread t2=new MyThread();
		t2.setName("Second");
		
		MyThread t3=new MyThread();
		t3.setName("Third");
		
//		t1.setPriority(Thread.MIN_PRIORITY);
//		t2.setPriority(Thread.MAX_PRIORITY);
		
		t3.setDaemon(true);
		t1.start();
		t2.start();
		t3.start();
		
		try {
			t1.join();
			t2.join();
			t3.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

}
----------------------------------------------
import java.util.regex.*;
import java.util.*;

public class RegexMobile {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Mobile No.:");
		String inp=sc.nextLine();
		
		String regex="^[6-9]{1}[0-9]{9}$";
		if(inp.matches(regex))
		{
			System.out.println("Valid Input");
		}
		else
		{
			System.out.println("Invalid Input");
		}

	}

}
------------------------------------------------
import java.util.regex.*;
import java.util.*;

public class RegexMobile {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Mobile No.:");
		String inp=sc.nextLine();
		
		String regex="^[6-9]{1}[0-9]{9}$";
		
		Pattern pattern=Pattern.compile(regex);		
		if(pattern.matcher(inp).matches())
		{
			System.out.println("Valid Input");
		}
		else
		{
			System.out.println("Invalid Input");
		}

	}

}
---------------------------------------------------



